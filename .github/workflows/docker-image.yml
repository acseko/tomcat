name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name || github.run_id }}
  cancel-in-progress: true
  
jobs:

  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - id: set-matrix
      run: echo "matrix=$(jq . -c < build.matrix.json)" >> $GITHUB_OUTPUT
    - id: debug-matrix
      run: echo "${{ fromJSON(steps.set-matrix.outputs.matrix) }}"
      
  build:
    name: Build Tomcat ${{ matrix.tomcat_major_version }} with OpenJDK ${{ matrix.openjdk_major_version }}
    runs-on: ubuntu-latest
    needs: 
      - configure
    strategy:
      matrix: ${{ fromJSON(needs.configure.outputs.matrix) }}
      fail-fast: false
    env:
      JAVA_MAJOR_VERSION: ${{ matrix.openjdk_major_version }}
      TOMCAT_VERSION: ${{ matrix.tomcat_major_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build the Tomcat $TOMCAT_VERSION Docker image for Java$JAVA_MAJOR_VERSION
      run: |
        export RELEASE=$(date +"%Y.%m.%d-%s")
        docker build . -t "tomcat${TOMCAT_VERSION}-java${JAVA_MAJOR_VERSION}:${RELEASE}" \
        --build-arg "TOMCAT_MAJOR_VERSION=${TOMCAT_VERSION}" \
        --build-arg "OPENJDK_MAJOR_VERSION=${JAVA_MAJOR_VERSION}" \
        --label "openjdk.version=${JAVA_MAJOR_VERSION}" \
        --label "tomcat.version=${TOMCAT_VERSION}"
