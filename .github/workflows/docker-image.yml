name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name || github.run_id }}
  cancel-in-progress: true
  
jobs:

  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - id: set-matrix
      run: echo "matrix=$(jq . -c < build.matrix.json)" >> $GITHUB_OUTPUT
    - id: debug-matrix
      run: echo "${{ fromJSON(steps.set-matrix.outputs.matrix) }}"
    - name: Set Release
      run: echo "RELEASE=$(date +"%Y.%m.%d")-$GITHUB_RUN_NUMBER" >> "$GITHUB_ENV"
      
  build:
    name: Build Tomcat ${{ matrix.tomcat_major_version }} with OpenJDK ${{ matrix.openjdk_major_version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    needs: 
      - configure
    strategy:
      matrix: ${{ fromJSON(needs.configure.outputs.matrix) }}
      fail-fast: false
    env:
      JAVA_MAJOR_VERSION: ${{ matrix.openjdk_major_version }}
      TOMCAT_VERSION: ${{ matrix.tomcat_major_version }}
      REGISTRY: docker.io #ghcr.io
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    # Install the cosign tool except on PR
    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      with:
        cosign-release: 'v2.2.4'

    # Set up BuildKit Docker container builder to be able to build
    # multi-platform images and export cache
    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }} #${{ github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN }} #${{ secrets.GITHUB_TOKEN }}
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ github.actor }}/tomcat${{ matrix.tomcat_major_version }}-java${{ matrix.openjdk_major_version }}
    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}, ${{ env.REGISTRY }}/${{ github.actor }}/tomcat${{ matrix.tomcat_major_version }}-java${{ matrix.openjdk_major_version }}:${RELEASE}, ${{ env.REGISTRY }}/${{ github.actor }}/tomcat${{ matrix.tomcat_major_version }}-java${{ matrix.openjdk_major_version }}:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          TOMCAT_MAJOR_VERSION=${{ matrix.tomcat_major_version }}
          OPENJDK_MAJOR_VERSION=${{ matrix.openjdk_major_version }}

    # Sign the resulting Docker image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data.  If you would like to publish
    # transparency data even for private images, pass --force to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}


#    - name: Build the Tomcat ${{ matrix.tomcat_major_version }} Docker image for Java ${{ matrix.openjdk_major_version }}
#      uses: actions/docker-build-push@v6
#      with:
#        image: ghcr.io/acseko/tomcat${{ matrix.tomcat_major_version }}-java${{ matrix.openjdk_major_version }}
#        tags: ${{ env.RELEASE }}
#        registry: ghcr.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.GHCR_USERNAME }}
#        password: ${{ secrets.GHCR_TOKEN }}
#        build-args: |
#          TOMCAT_MAJOR_VERSION=${{ matrix.tomcat_major_version }}
#          OPENJDK_MAJOR_VERSION=${{ matrix.openjdk_major_version }}
#        labels: |
#          openjdk.version=${{ matrix.openjdk_major_version }}
#          tomcat.version=${{ matrix.tomcat_major_version }}
#        pushImage: false
#        addLatest: true
#      run: |
#        export RELEASE=$(date +"%Y.%m.%d-%s")
#        docker build . -t "tomcat${TOMCAT_VERSION}-java${JAVA_MAJOR_VERSION}:${RELEASE}" \
#        --build-arg "TOMCAT_MAJOR_VERSION=${TOMCAT_VERSION}" \
#        --build-arg "OPENJDK_MAJOR_VERSION=${JAVA_MAJOR_VERSION}" \
#        --label "openjdk.version=${JAVA_MAJOR_VERSION}" \
#        --label "tomcat.version=${TOMCAT_VERSION}"
